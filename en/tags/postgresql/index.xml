<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgresql on code. grind. sleep.</title>
    <link>https://www.orgrim.net/en/tags/postgresql/</link>
    <description>Recent content in postgresql on code. grind. sleep.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>Nicolas Thauvin</managingEditor>
    <lastBuildDate>Wed, 10 Mar 2021 22:00:00 +0100</lastBuildDate><atom:link href="https://www.orgrim.net/en/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How Go helped for the rewrite of pg_back</title>
      <link>https://www.orgrim.net/en/post/2021-03-10-how-go-helped-for-the-rewrite-of-pg_back/</link>
      <pubDate>Wed, 10 Mar 2021 22:00:00 +0100</pubDate>
      <author>Nicolas Thauvin</author>
      
      <guid>https://www.orgrim.net/en/post/2021-03-10-how-go-helped-for-the-rewrite-of-pg_back/</guid>
      <description>&lt;p&gt;When I started developping &lt;a href=&#34;https://github.com/orgrim/pg_back&#34;&gt;pg_back&lt;/a&gt;, I
wanted to keep it a simple as possible, by limiting its features. It also
limited contributions, and at some point by accepting some useful
contributions, the script grew and became not so simple. We could go on with
the shell script and try to carefully control its growth, but it will sooner or
later reach some limits of shell scripting.&lt;/p&gt;
&lt;p&gt;After some time without making it evolve, I got interested in the Go
programming language. It appeared that pg_back could be a good candidate projet
to let me learn Go. This is why pg_back version 2 is written in Go.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Development environment for Patroni</title>
      <link>https://www.orgrim.net/en/post/2020-12-04-patroni-development-environment/</link>
      <pubDate>Fri, 04 Dec 2020 21:23:32 +0100</pubDate>
      <author>Nicolas Thauvin</author>
      
      <guid>https://www.orgrim.net/en/post/2020-12-04-patroni-development-environment/</guid>
      <description>Recently I found a missing feature in Patroni, a high availability solution for PostgreSQL written in Python.
Since I am doing more Python at work these days, I quickly made a patch. Before jumping on git push, I thought it would be nice to test if is really solves the issue. I needed a Patroni cluster, some configuration is provided and commands in the README, which is great but the instruction are not targetted toward development.</description>
    </item>
    
  </channel>
</rss>
